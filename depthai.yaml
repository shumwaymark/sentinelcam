# Settings file imagenode.yaml -- sentinalcam settings version 7, with OAK-1 integration  
---
node:
  name: east 
  heartbeat: 15
  REP_watcher: False                 # Not recommended for sentinelcam
  queuemax: 50
  send_type: jpg
  send_threading: True
  print_settings: False
hub_address:
  H1: tcp://data1:5555
cameras:
  O1:                                    # OAK-1 camera 
     viewname: Front
     resolution: (640, 360)
     framerate: 30
     detectors:
         outpost:
            encoder: oak                  # encoding workload for image publisher [cpu, oak]
            publish_cam: 5567             # ZMQ port for image frame publishing
            publish_log: 5565             # ZMQ port for log publishing, must match logconfig below
            logconfig:                    # logging configuration dictionary 
                version: 1
                handlers:
                    zmq:
                        class: zmq.log.handlers.PUBHandler
                        interface_or_socket: tcp://*:5565
                        root_topic: east
                        level: INFO
                root:
                    handlers: [zmq]
                    level: INFO
            camwatcher: tcp://data1:5566  # optional self-introduction to a running camwatcher as a new outpost
            spyglass: (640, 360)          # must match camera "resolution" above
            detectobjects: none           # [none, motion, mobilenetssd, yolov3]
            accelerator: none             # [none, ncs2, coral]
            tracker: none                 # [none, dlib, csrt, kcf, boosting, mil, tld, medianflow, mosse]
            depthai:
               pipeline: MobileNetSSD     # dictionary key to configured pipelines in oak_camera.py module
               images: frames             # queue name for image messages from camera 
               jpegs: jpegs               # queue name for JPEG encoding messages from OAK camera 
               neural_nets:
                  Q1:  nn                 # queue for neural net results
            sentinel_tasks: 
               person: GetFaces2          # sentinel task submission for "person" detections
